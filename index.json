[{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog.html","title":"Hedgehog","content":"Gen \nGenBuilder \nGenOperators \nJournal \nNumeric \nProperty \nPropertyBuilder \nRandom \nRandomBuilder \nRange \nReport \nResult \nSeed \nSeq \nShrink \nTree \nFailedException \nFailureReport \nFromBigInt \nGaveUpException \nGen\u003C\u0027a\u003E \nHedgehogException \nJournal \nMaxValue \nMinValue \nProperty\u003C\u0027a\u003E \nRandom\u003C\u0027a\u003E \nRange\u003C\u0027a\u003E \nReport \nResult\u003C\u0027a\u003E \nSeed \nSize \nStatus \nToBigInt \nTree\u003C\u0027a\u003E \ndiscards \nshrinks \ntests"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq.html","title":"Hedgehog.Linq","content":"Gen \nProperty \nRange"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html","title":"Gen","content":"Gen \n \nGen.Builder \nBuilder \nGen.ofRandom \nofRandom \nGen.toRandom \ntoRandom \nGen.delay \ndelay \nGen.tryFinally \ntryFinally \nGen.tryWith \ntryWith \nGen.create \ncreate \nGen.constant \nconstant \nGen.bind \nbind \nGen.apply \napply \nGen.mapRandom \nmapRandom \nGen.mapTree \nmapTree \nGen.map \nmap \nGen.map2 \nmap2 \nGen.map3 \nmap3 \nGen.map4 \nmap4 \nGen.zip \nzip \nGen.zip3 \nzip3 \nGen.zip4 \nzip4 \nGen.tuple \ntuple \nGen.tuple3 \ntuple3 \nGen.tuple4 \ntuple4 \nGen.noShrink \nnoShrink \nGen.shrinkLazy \nshrinkLazy \nGen.shrink \nshrink \nGen.sized \nsized \nGen.resize \nresize \nGen.scale \nscale \nGen.integral \nintegral \nGen.item \nitem \nGen.frequency \nfrequency \nGen.choice \nchoice \nGen.choiceRec \nchoiceRec \nGen.filter \nfilter \nGen.tryFilter \ntryFilter \nGen.some \nsome \nGen.option \noption \nGen.list \nlist \nGen.array \narray \nGen.seq \nseq \nGen.char \nchar \nGen.unicodeAll \nunicodeAll \nGen.digit \ndigit \nGen.lower \nlower \nGen.upper \nupper \nGen.ascii \nascii \nGen.latin1 \nlatin1 \nGen.unicode \nunicode \nGen.alpha \nalpha \nGen.alphaNum \nalphaNum \nGen.string \nstring \nGen.bool \nbool \nGen.byte \nbyte \nGen.sbyte \nsbyte \nGen.int16 \nint16 \nGen.uint16 \nuint16 \nGen.int \nint \nGen.uint32 \nuint32 \nGen.int64 \nint64 \nGen.uint64 \nuint64 \nGen.double \ndouble \nGen.float \nfloat \nGen.single \nsingle \nGen.decimal \ndecimal \nGen.guid \nguid \nGen.dateTime \ndateTime \nGen.dateTimeOffset \ndateTimeOffset \nGen.sampleTree \nsampleTree \nGen.sample \nsample \nGen.generateTree \ngenerateTree \nGen.printSample \nprintSample"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#ofRandom","title":"Gen.ofRandom","content":"Gen.ofRandom \nofRandom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#toRandom","title":"Gen.toRandom","content":"Gen.toRandom \ntoRandom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#delay","title":"Gen.delay","content":"Gen.delay \ndelay \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#tryFinally","title":"Gen.tryFinally","content":"Gen.tryFinally \ntryFinally \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#tryWith","title":"Gen.tryWith","content":"Gen.tryWith \ntryWith \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#create","title":"Gen.create","content":"Gen.create \ncreate \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#constant","title":"Gen.constant","content":"Gen.constant \nconstant \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#bind","title":"Gen.bind","content":"Gen.bind \nbind \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#apply","title":"Gen.apply","content":"Gen.apply \napply \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#mapRandom","title":"Gen.mapRandom","content":"Gen.mapRandom \nmapRandom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#mapTree","title":"Gen.mapTree","content":"Gen.mapTree \nmapTree \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#map","title":"Gen.map","content":"Gen.map \nmap \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#map2","title":"Gen.map2","content":"Gen.map2 \nmap2 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#map3","title":"Gen.map3","content":"Gen.map3 \nmap3 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#map4","title":"Gen.map4","content":"Gen.map4 \nmap4 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#zip","title":"Gen.zip","content":"Gen.zip \nzip \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#zip3","title":"Gen.zip3","content":"Gen.zip3 \nzip3 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#zip4","title":"Gen.zip4","content":"Gen.zip4 \nzip4 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#tuple","title":"Gen.tuple","content":"Gen.tuple \ntuple \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#tuple3","title":"Gen.tuple3","content":"Gen.tuple3 \ntuple3 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#tuple4","title":"Gen.tuple4","content":"Gen.tuple4 \ntuple4 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#noShrink","title":"Gen.noShrink","content":"Gen.noShrink \nnoShrink \n\n Prevent a \u0027Gen\u0027 from shrinking.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#shrinkLazy","title":"Gen.shrinkLazy","content":"Gen.shrinkLazy \nshrinkLazy \n\n Apply an additional shrinker to all generated trees.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#shrink","title":"Gen.shrink","content":"Gen.shrink \nshrink \n\n Apply an additional shrinker to all generated trees.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#sized","title":"Gen.sized","content":"Gen.sized \nsized \n\n Used to construct generators that depend on the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#resize","title":"Gen.resize","content":"Gen.resize \nresize \n\n Overrides the size parameter. Returns a generator which uses the\n given size instead of the runtime-size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#scale","title":"Gen.scale","content":"Gen.scale \nscale \n\n Adjust the size parameter, by transforming it with the given\n function.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#integral","title":"Gen.integral","content":"Gen.integral \nintegral \n\n Generates a random number in the given inclusive range.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#item","title":"Gen.item","content":"Gen.item \nitem \n\n Randomly selects one of the values in the list.\n \u003Ci\u003EThe input list must be non-empty.\u003C/i\u003E\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#frequency","title":"Gen.frequency","content":"Gen.frequency \nfrequency \n\n Uses a weighted distribution to randomly select one of the gens in the list.\n This generator shrinks towards the first generator in the list.\n \u003Ci\u003EThe input list must be non-empty.\u003C/i\u003E\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#choice","title":"Gen.choice","content":"Gen.choice \nchoice \n\n Randomly selects one of the gens in the list.\n \u003Ci\u003EThe input list must be non-empty.\u003C/i\u003E\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#choiceRec","title":"Gen.choiceRec","content":"Gen.choiceRec \nchoiceRec \n\n Randomly selects from one of the gens in either the non-recursive or the\n recursive list. When a selection is made from the recursive list, the size\n is halved. When the size gets to one or less, selections are no longer made\n from the recursive list.\n \u003Ci\u003EThe first argument (i.e. the non-recursive input list) must be non-empty.\u003C/i\u003E\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#filter","title":"Gen.filter","content":"Gen.filter \nfilter \n\n Generates a value that satisfies a predicate.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#tryFilter","title":"Gen.tryFilter","content":"Gen.tryFilter \ntryFilter \n\n Tries to generate a value that satisfies a predicate.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#some","title":"Gen.some","content":"Gen.some \nsome \n\n Runs an option generator until it produces a \u0027Some\u0027.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#option","title":"Gen.option","content":"Gen.option \noption \n\n Generates a \u0027None\u0027 part of the time.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#list","title":"Gen.list","content":"Gen.list \nlist \n\n Generates a list using a \u0027Range\u0027 to determine the length.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#array","title":"Gen.array","content":"Gen.array \narray \n\n Generates an array using a \u0027Range\u0027 to determine the length.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#seq","title":"Gen.seq","content":"Gen.seq \nseq \n\n Generates a sequence using a \u0027Range\u0027 to determine the length.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#char","title":"Gen.char","content":"Gen.char \nchar \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#unicodeAll","title":"Gen.unicodeAll","content":"Gen.unicodeAll \nunicodeAll \n\n Generates a Unicode character, including invalid standalone surrogates:\n \u0027\\000\u0027..\u0027\\65535\u0027\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#digit","title":"Gen.digit","content":"Gen.digit \ndigit \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#lower","title":"Gen.lower","content":"Gen.lower \nlower \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#upper","title":"Gen.upper","content":"Gen.upper \nupper \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#ascii","title":"Gen.ascii","content":"Gen.ascii \nascii \n\n Generates an ASCII character: \u0027\\000\u0027..\u0027\\127\u0027\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#latin1","title":"Gen.latin1","content":"Gen.latin1 \nlatin1 \n\n Generates a Latin-1 character: \u0027\\000\u0027..\u0027\\255\u0027\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#unicode","title":"Gen.unicode","content":"Gen.unicode \nunicode \n\n Generates a Unicode character, excluding noncharacters\n (\u0027\\65534\u0027, \u0027\\65535\u0027) and invalid standalone surrogates\n (\u0027\\000\u0027..\u0027\\65535\u0027 excluding \u0027\\55296\u0027..\u0027\\57343\u0027).\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#alpha","title":"Gen.alpha","content":"Gen.alpha \nalpha \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#alphaNum","title":"Gen.alphaNum","content":"Gen.alphaNum \nalphaNum \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#string","title":"Gen.string","content":"Gen.string \nstring \n\n Generates a random string using \u0027Range\u0027 to determine the length and the\n specified character generator.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#bool","title":"Gen.bool","content":"Gen.bool \nbool \n\n Generates a random boolean.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#byte","title":"Gen.byte","content":"Gen.byte \nbyte \n\n Generates a random byte.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#sbyte","title":"Gen.sbyte","content":"Gen.sbyte \nsbyte \n\n Generates a random signed byte.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#int16","title":"Gen.int16","content":"Gen.int16 \nint16 \n\n Generates a random signed 16-bit integer.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#uint16","title":"Gen.uint16","content":"Gen.uint16 \nuint16 \n\n Generates a random unsigned 16-bit integer.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#int","title":"Gen.int","content":"Gen.int \nint \n\n Generates a random signed 32-bit integer.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#uint32","title":"Gen.uint32","content":"Gen.uint32 \nuint32 \n\n Generates a random unsigned 32-bit integer.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#int64","title":"Gen.int64","content":"Gen.int64 \nint64 \n\n Generates a random signed 64-bit integer.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#uint64","title":"Gen.uint64","content":"Gen.uint64 \nuint64 \n\n Generates a random unsigned 64-bit integer.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#double","title":"Gen.double","content":"Gen.double \ndouble \n\n Generates a random 64-bit floating point number.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#float","title":"Gen.float","content":"Gen.float \nfloat \n\n Generates a random 64-bit floating point number.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#single","title":"Gen.single","content":"Gen.single \nsingle \n\n Generates a random 32-bit floating point number.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#decimal","title":"Gen.decimal","content":"Gen.decimal \ndecimal \n\n Generates a random decimal floating-point number.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#guid","title":"Gen.guid","content":"Gen.guid \nguid \n\n Generates a random globally unique identifier.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#dateTime","title":"Gen.dateTime","content":"Gen.dateTime \ndateTime \n\n Generates a random DateTime using the specified range.\n For example:\n   let range =\n      Range.constantFrom\n          (DateTime (2000, 1, 1)) DateTime.MinValue DateTime.MaxValue\n   Gen.dateTime range\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#dateTimeOffset","title":"Gen.dateTimeOffset","content":"Gen.dateTimeOffset \ndateTimeOffset \n\n Generates a random DateTimeOffset using the specified range.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#sampleTree","title":"Gen.sampleTree","content":"Gen.sampleTree \nsampleTree \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#sample","title":"Gen.sample","content":"Gen.sample \nsample \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#generateTree","title":"Gen.generateTree","content":"Gen.generateTree \ngenerateTree \n\n Run a generator. The size passed to the generator is always 30;\n if you want another size then you should explicitly use \u0027resize\u0027.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen.html#printSample","title":"Gen.printSample","content":"Gen.printSample \nprintSample \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-builder.html","title":"Builder","content":"Builder \n \nBuilder.Bind \nBind \nBuilder.Combine \nCombine \nBuilder.Delay \nDelay \nBuilder.For \nFor \nBuilder.Return \nReturn \nBuilder.ReturnFrom \nReturnFrom \nBuilder.Zero \nZero"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Bind","title":"Builder.Bind","content":"Builder.Bind \nBind \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Combine","title":"Builder.Combine","content":"Builder.Combine \nCombine \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Delay","title":"Builder.Delay","content":"Builder.Delay \nDelay \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-builder.html#For","title":"Builder.For","content":"Builder.For \nFor \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Return","title":"Builder.Return","content":"Builder.Return \nReturn \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-builder.html#ReturnFrom","title":"Builder.ReturnFrom","content":"Builder.ReturnFrom \nReturnFrom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-builder.html#Zero","title":"Builder.Zero","content":"Builder.Zero \nZero \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-genbuilder.html","title":"GenBuilder","content":"GenBuilder \n \nGenBuilder.gen \ngen"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-genbuilder.html#gen","title":"GenBuilder.gen","content":"GenBuilder.gen \ngen \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-genoperators.html","title":"GenOperators","content":"GenOperators \n \nGenOperators.( \u003C!\u003E ) \n( \u003C!\u003E ) \nGenOperators.( \u003C*\u003E ) \n( \u003C*\u003E )"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-genoperators.html#( \u003C!\u003E )","title":"GenOperators.( \u003C!\u003E )","content":"GenOperators.( \u003C!\u003E ) \n( \u003C!\u003E ) \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-genoperators.html#( \u003C*\u003E )","title":"GenOperators.( \u003C*\u003E )","content":"GenOperators.( \u003C*\u003E ) \n( \u003C*\u003E ) \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journalmodule.html","title":"Journal","content":"Journal \n \nJournal.ofList \nofList \nJournal.toList \ntoList \nJournal.empty \nempty \nJournal.singleton \nsingleton \nJournal.delayedSingleton \ndelayedSingleton \nJournal.append \nappend"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journalmodule.html#ofList","title":"Journal.ofList","content":"Journal.ofList \nofList \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journalmodule.html#toList","title":"Journal.toList","content":"Journal.toList \ntoList \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journalmodule.html#empty","title":"Journal.empty","content":"Journal.empty \nempty \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journalmodule.html#singleton","title":"Journal.singleton","content":"Journal.singleton \nsingleton \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journalmodule.html#delayedSingleton","title":"Journal.delayedSingleton","content":"Journal.delayedSingleton \ndelayedSingleton \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journalmodule.html#append","title":"Journal.append","content":"Journal.append \nappend \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-numeric.html","title":"Numeric","content":"Numeric \n \nNumeric.minValue \nminValue \nNumeric.maxValue \nmaxValue \nNumeric.fromBigInt \nfromBigInt \nNumeric.toBigInt \ntoBigInt"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-numeric.html#minValue","title":"Numeric.minValue","content":"Numeric.minValue \nminValue \n\n Returns the smallest possible value.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-numeric.html#maxValue","title":"Numeric.maxValue","content":"Numeric.maxValue \nmaxValue \n\n Returns the largest possible value.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-numeric.html#fromBigInt","title":"Numeric.fromBigInt","content":"Numeric.fromBigInt \nfromBigInt \n\n Converts from a BigInt to the inferred destination type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-numeric.html#toBigInt","title":"Numeric.toBigInt","content":"Numeric.toBigInt \ntoBigInt \n\n Converts to a BigInt.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html","title":"Property","content":"Property \n \nProperty.ofGen \nofGen \nProperty.toGen \ntoGen \nProperty.tryFinally \ntryFinally \nProperty.tryWith \ntryWith \nProperty.delay \ndelay \nProperty.using \nusing \nProperty.filter \nfilter \nProperty.ofResult \nofResult \nProperty.failure \nfailure \nProperty.discard \ndiscard \nProperty.success \nsuccess \nProperty.ofBool \nofBool \nProperty.counterexample \ncounterexample \nProperty.map \nmap \nProperty.bind \nbind \nProperty.forAll \nforAll \nProperty.forAll\u0027 \nforAll\u0027 \nProperty.report\u0027 \nreport\u0027 \nProperty.report \nreport \nProperty.reportBool\u0027 \nreportBool\u0027 \nProperty.reportBool \nreportBool \nProperty.check\u0027 \ncheck\u0027 \nProperty.check \ncheck \nProperty.checkBool \ncheckBool \nProperty.checkBool\u0027 \ncheckBool\u0027 \nProperty.ofThrowing \nofThrowing \nProperty.reportRecheck\u0027 \nreportRecheck\u0027 \nProperty.reportRecheck \nreportRecheck \nProperty.reportRecheckBool\u0027 \nreportRecheckBool\u0027 \nProperty.reportRecheckBool \nreportRecheckBool \nProperty.recheck\u0027 \nrecheck\u0027 \nProperty.recheck \nrecheck \nProperty.recheckBool\u0027 \nrecheckBool\u0027 \nProperty.recheckBool \nrecheckBool \nProperty.print\u0027 \nprint\u0027 \nProperty.print \nprint"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#ofGen","title":"Property.ofGen","content":"Property.ofGen \nofGen \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#toGen","title":"Property.toGen","content":"Property.toGen \ntoGen \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#tryFinally","title":"Property.tryFinally","content":"Property.tryFinally \ntryFinally \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#tryWith","title":"Property.tryWith","content":"Property.tryWith \ntryWith \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#delay","title":"Property.delay","content":"Property.delay \ndelay \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#using","title":"Property.using","content":"Property.using \nusing \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#filter","title":"Property.filter","content":"Property.filter \nfilter \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#ofResult","title":"Property.ofResult","content":"Property.ofResult \nofResult \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#failure","title":"Property.failure","content":"Property.failure \nfailure \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#discard","title":"Property.discard","content":"Property.discard \ndiscard \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#success","title":"Property.success","content":"Property.success \nsuccess \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#ofBool","title":"Property.ofBool","content":"Property.ofBool \nofBool \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#counterexample","title":"Property.counterexample","content":"Property.counterexample \ncounterexample \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#map","title":"Property.map","content":"Property.map \nmap \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#bind","title":"Property.bind","content":"Property.bind \nbind \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#forAll","title":"Property.forAll","content":"Property.forAll \nforAll \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#forAll\u0027","title":"Property.forAll\u0027","content":"Property.forAll\u0027 \nforAll\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#report\u0027","title":"Property.report\u0027","content":"Property.report\u0027 \nreport\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#report","title":"Property.report","content":"Property.report \nreport \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#reportBool\u0027","title":"Property.reportBool\u0027","content":"Property.reportBool\u0027 \nreportBool\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#reportBool","title":"Property.reportBool","content":"Property.reportBool \nreportBool \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#check\u0027","title":"Property.check\u0027","content":"Property.check\u0027 \ncheck\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#check","title":"Property.check","content":"Property.check \ncheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#checkBool","title":"Property.checkBool","content":"Property.checkBool \ncheckBool \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#checkBool\u0027","title":"Property.checkBool\u0027","content":"Property.checkBool\u0027 \ncheckBool\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#ofThrowing","title":"Property.ofThrowing","content":"Property.ofThrowing \nofThrowing \n\n Converts a possibly-throwing function to\n a property by treating \u0022no exception\u0022 as success.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#reportRecheck\u0027","title":"Property.reportRecheck\u0027","content":"Property.reportRecheck\u0027 \nreportRecheck\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#reportRecheck","title":"Property.reportRecheck","content":"Property.reportRecheck \nreportRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#reportRecheckBool\u0027","title":"Property.reportRecheckBool\u0027","content":"Property.reportRecheckBool\u0027 \nreportRecheckBool\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#reportRecheckBool","title":"Property.reportRecheckBool","content":"Property.reportRecheckBool \nreportRecheckBool \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#recheck\u0027","title":"Property.recheck\u0027","content":"Property.recheck\u0027 \nrecheck\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#recheck","title":"Property.recheck","content":"Property.recheck \nrecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#recheckBool\u0027","title":"Property.recheckBool\u0027","content":"Property.recheckBool\u0027 \nrecheckBool\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#recheckBool","title":"Property.recheckBool","content":"Property.recheckBool \nrecheckBool \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#print\u0027","title":"Property.print\u0027","content":"Property.print\u0027 \nprint\u0027 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property.html#print","title":"Property.print","content":"Property.print \nprint \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder.html","title":"PropertyBuilder","content":"PropertyBuilder \n \nPropertyBuilder.Builder \nBuilder \nPropertyBuilder.property \nproperty"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder.html#property","title":"PropertyBuilder.property","content":"PropertyBuilder.property \nproperty \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html","title":"Builder","content":"Builder \n \nBuilder.Bind \nBind \nBuilder.Combine \nCombine \nBuilder.Counterexample \nCounterexample \nBuilder.Delay \nDelay \nBuilder.For \nFor \nBuilder.For \nFor \nBuilder.Return \nReturn \nBuilder.ReturnFrom \nReturnFrom \nBuilder.TryFinally \nTryFinally \nBuilder.TryWith \nTryWith \nBuilder.Using \nUsing \nBuilder.Where \nWhere \nBuilder.While \nWhile \nBuilder.Yield \nYield \nBuilder.Zero \nZero"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Bind","title":"Builder.Bind","content":"Builder.Bind \nBind \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Combine","title":"Builder.Combine","content":"Builder.Combine \nCombine \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Counterexample","title":"Builder.Counterexample","content":"Builder.Counterexample \nCounterexample \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Delay","title":"Builder.Delay","content":"Builder.Delay \nDelay \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#For","title":"Builder.For","content":"Builder.For \nFor \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#For","title":"Builder.For","content":"Builder.For \nFor \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Return","title":"Builder.Return","content":"Builder.Return \nReturn \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#ReturnFrom","title":"Builder.ReturnFrom","content":"Builder.ReturnFrom \nReturnFrom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#TryFinally","title":"Builder.TryFinally","content":"Builder.TryFinally \nTryFinally \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#TryWith","title":"Builder.TryWith","content":"Builder.TryWith \nTryWith \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Using","title":"Builder.Using","content":"Builder.Using \nUsing \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Where","title":"Builder.Where","content":"Builder.Where \nWhere \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#While","title":"Builder.While","content":"Builder.While \nWhile \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Yield","title":"Builder.Yield","content":"Builder.Yield \nYield \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-propertybuilder-builder.html#Zero","title":"Builder.Zero","content":"Builder.Zero \nZero \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html","title":"Random","content":"Random \n \nRandom.Builder \nBuilder \nRandom.run \nrun \nRandom.delay \ndelay \nRandom.tryFinally \ntryFinally \nRandom.tryWith \ntryWith \nRandom.constant \nconstant \nRandom.map \nmap \nRandom.bind \nbind \nRandom.replicate \nreplicate \nRandom.sized \nsized \nRandom.resize \nresize \nRandom.integral \nintegral \nRandom.double \ndouble"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#run","title":"Random.run","content":"Random.run \nrun \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#delay","title":"Random.delay","content":"Random.delay \ndelay \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#tryFinally","title":"Random.tryFinally","content":"Random.tryFinally \ntryFinally \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#tryWith","title":"Random.tryWith","content":"Random.tryWith \ntryWith \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#constant","title":"Random.constant","content":"Random.constant \nconstant \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#map","title":"Random.map","content":"Random.map \nmap \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#bind","title":"Random.bind","content":"Random.bind \nbind \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#replicate","title":"Random.replicate","content":"Random.replicate \nreplicate \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#sized","title":"Random.sized","content":"Random.sized \nsized \n\n Used to construct generators that depend on the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#resize","title":"Random.resize","content":"Random.resize \nresize \n\n Overrides the size parameter. Returns a generator which uses the\n given size instead of the runtime-size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#integral","title":"Random.integral","content":"Random.integral \nintegral \n\n Generates a random integral number in the given inclusive range.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random.html#double","title":"Random.double","content":"Random.double \ndouble \n\n Generates a random floating point number in the given inclusive range.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random-builder.html","title":"Builder","content":"Builder \n \nBuilder.Bind \nBind \nBuilder.Return \nReturn \nBuilder.ReturnFrom \nReturnFrom"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random-builder.html#Bind","title":"Builder.Bind","content":"Builder.Bind \nBind \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random-builder.html#Return","title":"Builder.Return","content":"Builder.Return \nReturn \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random-builder.html#ReturnFrom","title":"Builder.ReturnFrom","content":"Builder.ReturnFrom \nReturnFrom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-randombuilder.html","title":"RandomBuilder","content":"RandomBuilder \n \nRandomBuilder.random \nrandom"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-randombuilder.html#random","title":"RandomBuilder.random","content":"RandomBuilder.random \nrandom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html","title":"Range","content":"Range \n \nRange.Internal \nInternal \nRange.map \nmap \nRange.origin \norigin \nRange.bounds \nbounds \nRange.lowerBound \nlowerBound \nRange.upperBound \nupperBound \nRange.singleton \nsingleton \nRange.constantFrom \nconstantFrom \nRange.constant \nconstant \nRange.constantBounded \nconstantBounded \nRange.linearFrom \nlinearFrom \nRange.linear \nlinear \nRange.linearBounded \nlinearBounded \nRange.exponentialFrom \nexponentialFrom \nRange.exponential \nexponential \nRange.exponentialBounded \nexponentialBounded"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#map","title":"Range.map","content":"Range.map \nmap \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#origin","title":"Range.origin","content":"Range.origin \norigin \n\n Get the origin of a range. This might be the mid-point or the lower\n bound, depending on what the range represents.\n\n The \u0027bounds\u0027 of a range are scaled around this value when using the\n \u0027linear\u0027 family of combinators.\n\n When using a \u0027Range\u0027 to generate numbers, the shrinking function will\n shrink towards the origin.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#bounds","title":"Range.bounds","content":"Range.bounds \nbounds \n\n Get the extents of a range, for a given size.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#lowerBound","title":"Range.lowerBound","content":"Range.lowerBound \nlowerBound \n\n Get the lower bound of a range for the given size.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#upperBound","title":"Range.upperBound","content":"Range.upperBound \nupperBound \n\n Get the upper bound of a range for the given size.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#singleton","title":"Range.singleton","content":"Range.singleton \nsingleton \n\n Construct a range which represents a constant single value.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#constantFrom","title":"Range.constantFrom","content":"Range.constantFrom \nconstantFrom \n\n Construct a range which is unaffected by the size parameter with a\n origin point which may differ from the bounds.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#constant","title":"Range.constant","content":"Range.constant \nconstant \n\n Construct a range which is unaffected by the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#constantBounded","title":"Range.constantBounded","content":"Range.constantBounded \nconstantBounded \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#linearFrom","title":"Range.linearFrom","content":"Range.linearFrom \nlinearFrom \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#linear","title":"Range.linear","content":"Range.linear \nlinear \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#linearBounded","title":"Range.linearBounded","content":"Range.linearBounded \nlinearBounded \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#exponentialFrom","title":"Range.exponentialFrom","content":"Range.exponentialFrom \nexponentialFrom \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#exponential","title":"Range.exponential","content":"Range.exponential \nexponential \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range.html#exponentialBounded","title":"Range.exponentialBounded","content":"Range.exponentialBounded \nexponentialBounded \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range-internal.html","title":"Internal","content":"Internal \n \nInternal.clamp \nclamp \nInternal.scaleLinear \nscaleLinear \nInternal.scaleExponential \nscaleExponential"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range-internal.html#clamp","title":"Internal.clamp","content":"Internal.clamp \nclamp \n\n Truncate a value so it stays within some range.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range-internal.html#scaleLinear","title":"Internal.scaleLinear","content":"Internal.scaleLinear \nscaleLinear \n\n Scale an integral linearly with the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range-internal.html#scaleExponential","title":"Internal.scaleExponential","content":"Internal.scaleExponential \nscaleExponential \n\n Scale an integral exponentially with the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-reportmodule.html","title":"Report","content":"Report \n \nReport.render \nrender \nReport.tryRaise \ntryRaise"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-reportmodule.html#render","title":"Report.render","content":"Report.render \nrender \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-reportmodule.html#tryRaise","title":"Report.tryRaise","content":"Report.tryRaise \ntryRaise \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-resultmodule.html","title":"Result","content":"Result \n \nResult.map \nmap \nResult.filter \nfilter \nResult.isFailure \nisFailure"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-resultmodule.html#map","title":"Result.map","content":"Result.map \nmap \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-resultmodule.html#filter","title":"Result.filter","content":"Result.filter \nfilter \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-resultmodule.html#isFailure","title":"Result.isFailure","content":"Result.isFailure \nisFailure \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html","title":"Seed","content":"Seed \n \nSeed.ofInt32 \nofInt32 \nSeed.from \nfrom \nSeed.random \nrandom \nSeed.range \nrange \nSeed.next \nnext \nSeed.nextBigInt \nnextBigInt \nSeed.nextDouble \nnextDouble \nSeed.split \nsplit"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html#ofInt32","title":"Seed.ofInt32","content":"Seed.ofInt32 \nofInt32 \n\n Create a new \u0027Seed\u0027 from a 32-bit integer.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html#from","title":"Seed.from","content":"Seed.from \nfrom \n\n Create a new \u0027Seed\u0027.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html#random","title":"Seed.random","content":"Seed.random \nrandom \n\n Create a new random \u0027Seed\u0027.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html#range","title":"Seed.range","content":"Seed.range \nrange \n\n The possible range of values returned from \u0027next\u0027.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html#next","title":"Seed.next","content":"Seed.next \nnext \n\n Returns the next pseudo-random number in the sequence, and a new seed.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html#nextBigInt","title":"Seed.nextBigInt","content":"Seed.nextBigInt \nnextBigInt \n\n Generates a random bigint in the specified range.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html#nextDouble","title":"Seed.nextDouble","content":"Seed.nextDouble \nnextDouble \n\n Generates a random double in the specified range.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seedmodule.html#split","title":"Seed.split","content":"Seed.split \nsplit \n\n Splits a random number generator in to two.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seq.html","title":"Seq","content":"Seq \n \nSeq.cons \ncons \nSeq.consNub \nconsNub"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seq.html#cons","title":"Seq.cons","content":"Seq.cons \ncons \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seq.html#consNub","title":"Seq.consNub","content":"Seq.consNub \nconsNub \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html","title":"Shrink","content":"Shrink \n \nShrink.removes \nremoves \nShrink.halves \nhalves \nShrink.list \nlist \nShrink.elems \nelems \nShrink.sequence \nsequence \nShrink.sequenceList \nsequenceList \nShrink.sequenceElems \nsequenceElems \nShrink.towards \ntowards \nShrink.towardsDouble \ntowardsDouble"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#removes","title":"Shrink.removes","content":"Shrink.removes \nremoves \n\n Produce all permutations of removing \u0027k\u0027 elements from a list.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#halves","title":"Shrink.halves","content":"Shrink.halves \nhalves \n\n Produce a list containing the progressive halving of an integral.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#list","title":"Shrink.list","content":"Shrink.list \nlist \n\n Shrink a list by edging towards the empty list.\n Note we always try the empty list first, as that is the optimal shrink.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#elems","title":"Shrink.elems","content":"Shrink.elems \nelems \n\n Shrink each of the elements in input list using the supplied shrinking\n function.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#sequence","title":"Shrink.sequence","content":"Shrink.sequence \nsequence \n\n Turn a list of trees in to a tree of lists, using the supplied function to\n merge shrinking options.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#sequenceList","title":"Shrink.sequenceList","content":"Shrink.sequenceList \nsequenceList \n\n Turn a list of trees in to a tree of lists, opting to shrink both the list\n itself and the elements in the list during traversal.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#sequenceElems","title":"Shrink.sequenceElems","content":"Shrink.sequenceElems \nsequenceElems \n\n Turn a list of trees in to a tree of lists, opting to shrink only the\n elements of the list (i.e. the size of the list will always be the same).\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#towards","title":"Shrink.towards","content":"Shrink.towards \ntowards \n\n Shrink an integral number by edging towards a destination.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrink.html#towardsDouble","title":"Shrink.towardsDouble","content":"Shrink.towardsDouble \ntowardsDouble \n\n Shrink a floating-point number by edging towards a destination.\n Note we always try the destination first, as that is the optimal shrink.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html","title":"Tree","content":"Tree \n \nTree.outcome \noutcome \nTree.shrinks \nshrinks \nTree.singleton \nsingleton \nTree.map \nmap \nTree.bind \nbind \nTree.join \njoin \nTree.duplicate \nduplicate \nTree.fold \nfold \nTree.foldForest \nfoldForest \nTree.unfold \nunfold \nTree.unfoldForest \nunfoldForest \nTree.expand \nexpand \nTree.filter \nfilter \nTree.filterForest \nfilterForest \nTree.renderList \nrenderList \nTree.render \nrender"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#outcome","title":"Tree.outcome","content":"Tree.outcome \noutcome \n\n The generated outcome.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#shrinks","title":"Tree.shrinks","content":"Tree.shrinks \nshrinks \n\n All the possible shrinks of this outcome. This should be ordered\n smallest to largest as if property still fails with the first shrink in\n the list then we will commit to that path and none of the others will\n be tried (i.e. there is no backtracking).\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#singleton","title":"Tree.singleton","content":"Tree.singleton \nsingleton \n\n Create a tree with a single outcome and no shrinks.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#map","title":"Tree.map","content":"Tree.map \nmap \n\n Map over a tree.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#bind","title":"Tree.bind","content":"Tree.bind \nbind \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#join","title":"Tree.join","content":"Tree.join \njoin \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#duplicate","title":"Tree.duplicate","content":"Tree.duplicate \nduplicate \n\n Turns a tree, in to a tree of trees. Useful for testing Hedgehog itself as\n it allows you to observe the shrinks for a value inside a property,\n while still allowing the property to shrink to a minimal\n counterexample.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#fold","title":"Tree.fold","content":"Tree.fold \nfold \n\n Fold over a tree.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#foldForest","title":"Tree.foldForest","content":"Tree.foldForest \nfoldForest \n\n Fold over a list of trees.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#unfold","title":"Tree.unfold","content":"Tree.unfold \nunfold \n\n Build a tree from an unfolding function and a seed value.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#unfoldForest","title":"Tree.unfoldForest","content":"Tree.unfoldForest \nunfoldForest \n\n Build a list of trees from an unfolding function and a seed value.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#expand","title":"Tree.expand","content":"Tree.expand \nexpand \n\n Apply an additional unfolding function to an existing tree.\n\n The root outcome remains intact, only the shrinks are affected, this\n applies recursively, so shrinks can only ever be added using this\n function.\n\n If you want to replace the shrinks altogether, try:\n\n Tree.unfold f (outcome oldTree)\n\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#filter","title":"Tree.filter","content":"Tree.filter \nfilter \n\n Recursively discard any shrinks whose outcome does not pass the predicate.\n Note that the root outcome can never be discarded.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#filterForest","title":"Tree.filterForest","content":"Tree.filterForest \nfilterForest \n\n Recursively discard any trees whose outcome does not pass the predicate.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#renderList","title":"Tree.renderList","content":"Tree.renderList \nrenderList \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree.html#render","title":"Tree.render","content":"Tree.render \nrender \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failedexception.html","title":"FailedException","content":"FailedException \n \nFailedException.( .ctor ) \n( .ctor ) \nFailedException.Tests \nTests \nFailedException.Shrinks \nShrinks \nFailedException.Journal \nJournal \nFailedException.Discards \nDiscards"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failedexception.html#( .ctor )","title":"FailedException.( .ctor )","content":"FailedException.( .ctor ) \n( .ctor ) \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failedexception.html#Tests","title":"FailedException.Tests","content":"FailedException.Tests \nTests \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failedexception.html#Shrinks","title":"FailedException.Shrinks","content":"FailedException.Shrinks \nShrinks \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failedexception.html#Journal","title":"FailedException.Journal","content":"FailedException.Journal \nJournal \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failedexception.html#Discards","title":"FailedException.Discards","content":"FailedException.Discards \nDiscards \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failurereport.html","title":"FailureReport","content":"FailureReport \n \nFailureReport.Size \nSize \nFailureReport.Seed \nSeed \nFailureReport.Shrinks \nShrinks \nFailureReport.Journal \nJournal \nFailureReport.RenderRecheck \nRenderRecheck"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failurereport.html#Size","title":"FailureReport.Size","content":"FailureReport.Size \nSize \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failurereport.html#Seed","title":"FailureReport.Seed","content":"FailureReport.Seed \nSeed \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failurereport.html#Shrinks","title":"FailureReport.Shrinks","content":"FailureReport.Shrinks \nShrinks \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failurereport.html#Journal","title":"FailureReport.Journal","content":"FailureReport.Journal \nJournal \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-failurereport.html#RenderRecheck","title":"FailureReport.RenderRecheck","content":"FailureReport.RenderRecheck \nRenderRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html","title":"FromBigInt","content":"FromBigInt \n \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.Invoke \nInvoke"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-frombigint.html#Invoke","title":"FromBigInt.Invoke","content":"FromBigInt.Invoke \nInvoke \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gaveupexception.html","title":"GaveUpException","content":"GaveUpException \n \nGaveUpException.( .ctor ) \n( .ctor ) \nGaveUpException.Tests \nTests"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gaveupexception.html#( .ctor )","title":"GaveUpException.( .ctor )","content":"GaveUpException.( .ctor ) \n( .ctor ) \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gaveupexception.html#Tests","title":"GaveUpException.Tests","content":"GaveUpException.Tests \nTests \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-1.html","title":"Gen\u003C\u0027a\u003E","content":"Gen\u003C\u0027a\u003E \n\n A generator for values and shrink trees of type \u0027a.\n \nGen\u003C\u0027a\u003E.Gen \nGen"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-gen-1.html#Gen","title":"Gen\u003C\u0027a\u003E.Gen","content":"Gen\u003C\u0027a\u003E.Gen \nGen \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-hedgehogexception.html","title":"HedgehogException","content":"HedgehogException \n \nHedgehogException.( .ctor ) \n( .ctor )"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-hedgehogexception.html#( .ctor )","title":"HedgehogException.( .ctor )","content":"HedgehogException.( .ctor ) \n( .ctor ) \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journal.html","title":"Journal","content":"Journal \n \nJournal.Journal \nJournal"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-journal.html#Journal","title":"Journal.Journal","content":"Journal.Journal \nJournal \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html","title":"MaxValue","content":"MaxValue \n \nMaxValue.Invoke \nInvoke \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#Invoke","title":"MaxValue.Invoke","content":"MaxValue.Invoke \nInvoke \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html","title":"MinValue","content":"MinValue \n \nMinValue.Invoke \nInvoke \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#Invoke","title":"MinValue.Invoke","content":"MinValue.Invoke \nInvoke \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property-1.html","title":"Property\u003C\u0027a\u003E","content":"Property\u003C\u0027a\u003E \n \nProperty\u003C\u0027a\u003E.Property \nProperty"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-property-1.html#Property","title":"Property\u003C\u0027a\u003E.Property","content":"Property\u003C\u0027a\u003E.Property \nProperty \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random-1.html","title":"Random\u003C\u0027a\u003E","content":"Random\u003C\u0027a\u003E \n\n A generator for random values of type \u0027a\n \nRandom\u003C\u0027a\u003E.Random \nRandom"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-random-1.html#Random","title":"Random\u003C\u0027a\u003E.Random","content":"Random\u003C\u0027a\u003E.Random \nRandom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range-1.html","title":"Range\u003C\u0027a\u003E","content":"Range\u003C\u0027a\u003E \n\n A range describes the bounds of a number to generate, which may or may not\n be dependent on a \u0027Size\u0027.\n\n The constructor takes an origin between the lower and upper bound, and a\n function from \u0027Size\u0027 to bounds.  As the size goes towards 0, the values\n go towards the origin.\n \nRange\u003C\u0027a\u003E.Range \nRange"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-range-1.html#Range","title":"Range\u003C\u0027a\u003E.Range","content":"Range\u003C\u0027a\u003E.Range \nRange \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-report.html","title":"Report","content":"Report \n \nReport.Tests \nTests \nReport.Discards \nDiscards \nReport.Status \nStatus"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-report.html#Tests","title":"Report.Tests","content":"Report.Tests \nTests \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-report.html#Discards","title":"Report.Discards","content":"Report.Discards \nDiscards \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-report.html#Status","title":"Report.Status","content":"Report.Status \nStatus \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-result-1.html","title":"Result\u003C\u0027a\u003E","content":"Result\u003C\u0027a\u003E \n \nResult\u003C\u0027a\u003E.Failure \nFailure \nResult\u003C\u0027a\u003E.Discard \nDiscard \nResult\u003C\u0027a\u003E.Success \nSuccess"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-result-1.html#Failure","title":"Result\u003C\u0027a\u003E.Failure","content":"Result\u003C\u0027a\u003E.Failure \nFailure \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-result-1.html#Discard","title":"Result\u003C\u0027a\u003E.Discard","content":"Result\u003C\u0027a\u003E.Discard \nDiscard \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-result-1.html#Success","title":"Result\u003C\u0027a\u003E.Success","content":"Result\u003C\u0027a\u003E.Success \nSuccess \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seed.html","title":"Seed","content":"Seed \n\n Splittable random number generator.\n \nSeed.Value \nValue \nSeed.Gamma \nGamma"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seed.html#Value","title":"Seed.Value","content":"Seed.Value \nValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-seed.html#Gamma","title":"Seed.Gamma","content":"Seed.Gamma \nGamma \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-size.html","title":"Size","content":"Size \n\n Tests are parameterized by the \u0060Size\u0060 of the randomly-generated data,\n the meaning of which depends on the particular generator used.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-status.html","title":"Status","content":"Status \n \nStatus.Failed \nFailed \nStatus.GaveUp \nGaveUp \nStatus.OK \nOK"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-status.html#Failed","title":"Status.Failed","content":"Status.Failed \nFailed \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-status.html#GaveUp","title":"Status.GaveUp","content":"Status.GaveUp \nGaveUp \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-status.html#OK","title":"Status.OK","content":"Status.OK \nOK \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html","title":"ToBigInt","content":"ToBigInt \n \nToBigInt.Invoke \nInvoke \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#Invoke","title":"ToBigInt.Invoke","content":"ToBigInt.Invoke \nInvoke \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree-1.html","title":"Tree\u003C\u0027a\u003E","content":"Tree\u003C\u0027a\u003E \n\n A rose tree which represents a random generated outcome, and all the ways\n in which it can be made smaller.\n \nTree\u003C\u0027a\u003E.Node \nNode"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tree-1.html#Node","title":"Tree\u003C\u0027a\u003E.Node","content":"Tree\u003C\u0027a\u003E.Node \nNode \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-discards.html","title":"discards","content":"discards \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-shrinks.html","title":"shrinks","content":"shrinks \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-tests.html","title":"tests","content":"tests \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html","title":"Gen","content":"Gen \n \nGen.Apply \nApply \nGen.Array \nArray \nGen.Byte \nByte \nGen.Char \nChar \nGen.Choice \nChoice \nGen.ChoiceRecursive \nChoiceRecursive \nGen.Create \nCreate \nGen.DateTime \nDateTime \nGen.DateTimeOffset \nDateTimeOffset \nGen.Decimal \nDecimal \nGen.Delay \nDelay \nGen.Double \nDouble \nGen.Enumerable \nEnumerable \nGen.Frequency \nFrequency \nGen.FromRandom \nFromRandom \nGen.FromValue \nFromValue \nGen.GenerateTree \nGenerateTree \nGen.Int16 \nInt16 \nGen.Int32 \nInt32 \nGen.Int64 \nInt64 \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Integral \nIntegral \nGen.Item \nItem \nGen.List \nList \nGen.NoShrink \nNoShrink \nGen.NullReference \nNullReference \nGen.NullValue \nNullValue \nGen.PrintSample \nPrintSample \nGen.Resize \nResize \nGen.SByte \nSByte \nGen.Sample \nSample \nGen.SampleTree \nSampleTree \nGen.Scale \nScale \nGen.Select \nSelect \nGen.Select \nSelect \nGen.Select \nSelect \nGen.Select \nSelect \nGen.SelectMany \nSelectMany \nGen.SelectMany \nSelectMany \nGen.SelectRandom \nSelectRandom \nGen.SelectTree \nSelectTree \nGen.Shrink \nShrink \nGen.ShrinkLazy \nShrinkLazy \nGen.Single \nSingle \nGen.Sized \nSized \nGen.Some \nSome \nGen.String \nString \nGen.ToGen \nToGen \nGen.ToRandom \nToRandom \nGen.TryFinally \nTryFinally \nGen.TryWhere \nTryWhere \nGen.TryWith \nTryWith \nGen.Tuple2 \nTuple2 \nGen.Tuple3 \nTuple3 \nGen.Tuple4 \nTuple4 \nGen.UInt16 \nUInt16 \nGen.UInt32 \nUInt32 \nGen.UInt64 \nUInt64 \nGen.Where \nWhere \nGen.Zip \nZip \nGen.Zip \nZip \nGen.Zip \nZip \nGen.Upper \nUpper \nGen.UnicodeAll \nUnicodeAll \nGen.Unicode \nUnicode \nGen.Lower \nLower \nGen.Latin1 \nLatin1 \nGen.Guid \nGuid \nGen.Digit \nDigit \nGen.Bool \nBool \nGen.Ascii \nAscii \nGen.AlphaNumeric \nAlphaNumeric \nGen.Alpha \nAlpha"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Apply","title":"Gen.Apply","content":"Gen.Apply \nApply \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Array","title":"Gen.Array","content":"Gen.Array \nArray \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Byte","title":"Gen.Byte","content":"Gen.Byte \nByte \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Char","title":"Gen.Char","content":"Gen.Char \nChar \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Choice","title":"Gen.Choice","content":"Gen.Choice \nChoice \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#ChoiceRecursive","title":"Gen.ChoiceRecursive","content":"Gen.ChoiceRecursive \nChoiceRecursive \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Create","title":"Gen.Create","content":"Gen.Create \nCreate \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#DateTime","title":"Gen.DateTime","content":"Gen.DateTime \nDateTime \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#DateTimeOffset","title":"Gen.DateTimeOffset","content":"Gen.DateTimeOffset \nDateTimeOffset \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Decimal","title":"Gen.Decimal","content":"Gen.Decimal \nDecimal \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Delay","title":"Gen.Delay","content":"Gen.Delay \nDelay \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Double","title":"Gen.Double","content":"Gen.Double \nDouble \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Enumerable","title":"Gen.Enumerable","content":"Gen.Enumerable \nEnumerable \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Frequency","title":"Gen.Frequency","content":"Gen.Frequency \nFrequency \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#FromRandom","title":"Gen.FromRandom","content":"Gen.FromRandom \nFromRandom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#FromValue","title":"Gen.FromValue","content":"Gen.FromValue \nFromValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#GenerateTree","title":"Gen.GenerateTree","content":"Gen.GenerateTree \nGenerateTree \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Int16","title":"Gen.Int16","content":"Gen.Int16 \nInt16 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Int32","title":"Gen.Int32","content":"Gen.Int32 \nInt32 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Int64","title":"Gen.Int64","content":"Gen.Int64 \nInt64 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Integral","title":"Gen.Integral","content":"Gen.Integral \nIntegral \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Item","title":"Gen.Item","content":"Gen.Item \nItem \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#List","title":"Gen.List","content":"Gen.List \nList \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#NoShrink","title":"Gen.NoShrink","content":"Gen.NoShrink \nNoShrink \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#NullReference","title":"Gen.NullReference","content":"Gen.NullReference \nNullReference \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#NullValue","title":"Gen.NullValue","content":"Gen.NullValue \nNullValue \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#PrintSample","title":"Gen.PrintSample","content":"Gen.PrintSample \nPrintSample \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Resize","title":"Gen.Resize","content":"Gen.Resize \nResize \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#SByte","title":"Gen.SByte","content":"Gen.SByte \nSByte \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Sample","title":"Gen.Sample","content":"Gen.Sample \nSample \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#SampleTree","title":"Gen.SampleTree","content":"Gen.SampleTree \nSampleTree \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Scale","title":"Gen.Scale","content":"Gen.Scale \nScale \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Select","title":"Gen.Select","content":"Gen.Select \nSelect \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Select","title":"Gen.Select","content":"Gen.Select \nSelect \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Select","title":"Gen.Select","content":"Gen.Select \nSelect \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Select","title":"Gen.Select","content":"Gen.Select \nSelect \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#SelectMany","title":"Gen.SelectMany","content":"Gen.SelectMany \nSelectMany \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#SelectMany","title":"Gen.SelectMany","content":"Gen.SelectMany \nSelectMany \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#SelectRandom","title":"Gen.SelectRandom","content":"Gen.SelectRandom \nSelectRandom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#SelectTree","title":"Gen.SelectTree","content":"Gen.SelectTree \nSelectTree \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Shrink","title":"Gen.Shrink","content":"Gen.Shrink \nShrink \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#ShrinkLazy","title":"Gen.ShrinkLazy","content":"Gen.ShrinkLazy \nShrinkLazy \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Single","title":"Gen.Single","content":"Gen.Single \nSingle \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Sized","title":"Gen.Sized","content":"Gen.Sized \nSized \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Some","title":"Gen.Some","content":"Gen.Some \nSome \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#String","title":"Gen.String","content":"Gen.String \nString \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#ToGen","title":"Gen.ToGen","content":"Gen.ToGen \nToGen \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#ToRandom","title":"Gen.ToRandom","content":"Gen.ToRandom \nToRandom \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#TryFinally","title":"Gen.TryFinally","content":"Gen.TryFinally \nTryFinally \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#TryWhere","title":"Gen.TryWhere","content":"Gen.TryWhere \nTryWhere \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#TryWith","title":"Gen.TryWith","content":"Gen.TryWith \nTryWith \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Tuple2","title":"Gen.Tuple2","content":"Gen.Tuple2 \nTuple2 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Tuple3","title":"Gen.Tuple3","content":"Gen.Tuple3 \nTuple3 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Tuple4","title":"Gen.Tuple4","content":"Gen.Tuple4 \nTuple4 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#UInt16","title":"Gen.UInt16","content":"Gen.UInt16 \nUInt16 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#UInt32","title":"Gen.UInt32","content":"Gen.UInt32 \nUInt32 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#UInt64","title":"Gen.UInt64","content":"Gen.UInt64 \nUInt64 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Where","title":"Gen.Where","content":"Gen.Where \nWhere \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Zip","title":"Gen.Zip","content":"Gen.Zip \nZip \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Zip","title":"Gen.Zip","content":"Gen.Zip \nZip \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Zip","title":"Gen.Zip","content":"Gen.Zip \nZip \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Upper","title":"Gen.Upper","content":"Gen.Upper \nUpper \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#UnicodeAll","title":"Gen.UnicodeAll","content":"Gen.UnicodeAll \nUnicodeAll \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Unicode","title":"Gen.Unicode","content":"Gen.Unicode \nUnicode \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Lower","title":"Gen.Lower","content":"Gen.Lower \nLower \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Latin1","title":"Gen.Latin1","content":"Gen.Latin1 \nLatin1 \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Guid","title":"Gen.Guid","content":"Gen.Guid \nGuid \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Digit","title":"Gen.Digit","content":"Gen.Digit \nDigit \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Bool","title":"Gen.Bool","content":"Gen.Bool \nBool \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Ascii","title":"Gen.Ascii","content":"Gen.Ascii \nAscii \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#AlphaNumeric","title":"Gen.AlphaNumeric","content":"Gen.AlphaNumeric \nAlphaNumeric \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-gen.html#Alpha","title":"Gen.Alpha","content":"Gen.Alpha \nAlpha \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html","title":"Property","content":"Property \n \nProperty.Check \nCheck \nProperty.Check \nCheck \nProperty.Check \nCheck \nProperty.Check \nCheck \nProperty.CounterExample \nCounterExample \nProperty.Delay \nDelay \nProperty.ForAll \nForAll \nProperty.ForAll \nForAll \nProperty.FromBool \nFromBool \nProperty.FromGen \nFromGen \nProperty.FromResult \nFromResult \nProperty.FromThrowing \nFromThrowing \nProperty.Print \nPrint \nProperty.Print \nPrint \nProperty.Recheck \nRecheck \nProperty.Recheck \nRecheck \nProperty.Recheck \nRecheck \nProperty.Recheck \nRecheck \nProperty.Report \nReport \nProperty.Report \nReport \nProperty.Report \nReport \nProperty.Report \nReport \nProperty.ReportRecheck \nReportRecheck \nProperty.ReportRecheck \nReportRecheck \nProperty.ReportRecheck \nReportRecheck \nProperty.ReportRecheck \nReportRecheck \nProperty.Select \nSelect \nProperty.Select \nSelect \nProperty.SelectMany \nSelectMany \nProperty.SelectMany \nSelectMany \nProperty.Success \nSuccess \nProperty.ToGen \nToGen \nProperty.TryFinally \nTryFinally \nProperty.TryWith \nTryWith \nProperty.Using \nUsing \nProperty.Where \nWhere \nProperty.Failure \nFailure \nProperty.Discard \nDiscard"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Check","title":"Property.Check","content":"Property.Check \nCheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Check","title":"Property.Check","content":"Property.Check \nCheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Check","title":"Property.Check","content":"Property.Check \nCheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Check","title":"Property.Check","content":"Property.Check \nCheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#CounterExample","title":"Property.CounterExample","content":"Property.CounterExample \nCounterExample \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Delay","title":"Property.Delay","content":"Property.Delay \nDelay \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#ForAll","title":"Property.ForAll","content":"Property.ForAll \nForAll \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#ForAll","title":"Property.ForAll","content":"Property.ForAll \nForAll \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#FromBool","title":"Property.FromBool","content":"Property.FromBool \nFromBool \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#FromGen","title":"Property.FromGen","content":"Property.FromGen \nFromGen \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#FromResult","title":"Property.FromResult","content":"Property.FromResult \nFromResult \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#FromThrowing","title":"Property.FromThrowing","content":"Property.FromThrowing \nFromThrowing \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Print","title":"Property.Print","content":"Property.Print \nPrint \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Print","title":"Property.Print","content":"Property.Print \nPrint \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Recheck","title":"Property.Recheck","content":"Property.Recheck \nRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Recheck","title":"Property.Recheck","content":"Property.Recheck \nRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Recheck","title":"Property.Recheck","content":"Property.Recheck \nRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Recheck","title":"Property.Recheck","content":"Property.Recheck \nRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Report","title":"Property.Report","content":"Property.Report \nReport \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Report","title":"Property.Report","content":"Property.Report \nReport \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Report","title":"Property.Report","content":"Property.Report \nReport \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Report","title":"Property.Report","content":"Property.Report \nReport \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#ReportRecheck","title":"Property.ReportRecheck","content":"Property.ReportRecheck \nReportRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#ReportRecheck","title":"Property.ReportRecheck","content":"Property.ReportRecheck \nReportRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#ReportRecheck","title":"Property.ReportRecheck","content":"Property.ReportRecheck \nReportRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#ReportRecheck","title":"Property.ReportRecheck","content":"Property.ReportRecheck \nReportRecheck \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Select","title":"Property.Select","content":"Property.Select \nSelect \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Select","title":"Property.Select","content":"Property.Select \nSelect \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#SelectMany","title":"Property.SelectMany","content":"Property.SelectMany \nSelectMany \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#SelectMany","title":"Property.SelectMany","content":"Property.SelectMany \nSelectMany \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Success","title":"Property.Success","content":"Property.Success \nSuccess \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#ToGen","title":"Property.ToGen","content":"Property.ToGen \nToGen \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#TryFinally","title":"Property.TryFinally","content":"Property.TryFinally \nTryFinally \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#TryWith","title":"Property.TryWith","content":"Property.TryWith \nTryWith \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Using","title":"Property.Using","content":"Property.Using \nUsing \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Where","title":"Property.Where","content":"Property.Where \nWhere \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Failure","title":"Property.Failure","content":"Property.Failure \nFailure \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-property.html#Discard","title":"Property.Discard","content":"Property.Discard \nDiscard \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html","title":"Range","content":"Range \n \nRange.Bounds \nBounds \nRange.Constant \nConstant \nRange.Constant \nConstant \nRange.ConstantBoundedByte \nConstantBoundedByte \nRange.ConstantBoundedDecimal \nConstantBoundedDecimal \nRange.ConstantBoundedDouble \nConstantBoundedDouble \nRange.ConstantBoundedInt16 \nConstantBoundedInt16 \nRange.ConstantBoundedInt32 \nConstantBoundedInt32 \nRange.ConstantBoundedInt64 \nConstantBoundedInt64 \nRange.ConstantBoundedSByte \nConstantBoundedSByte \nRange.ConstantBoundedSingle \nConstantBoundedSingle \nRange.ConstantBoundedUInt16 \nConstantBoundedUInt16 \nRange.ConstantBoundedUInt32 \nConstantBoundedUInt32 \nRange.ConstantBoundedUInt64 \nConstantBoundedUInt64 \nRange.ExponentialBoundedByte \nExponentialBoundedByte \nRange.ExponentialBoundedDecimal \nExponentialBoundedDecimal \nRange.ExponentialBoundedDouble \nExponentialBoundedDouble \nRange.ExponentialBoundedInt16 \nExponentialBoundedInt16 \nRange.ExponentialBoundedInt32 \nExponentialBoundedInt32 \nRange.ExponentialBoundedInt64 \nExponentialBoundedInt64 \nRange.ExponentialBoundedSByte \nExponentialBoundedSByte \nRange.ExponentialBoundedSingle \nExponentialBoundedSingle \nRange.ExponentialBoundedUInt16 \nExponentialBoundedUInt16 \nRange.ExponentialBoundedUInt32 \nExponentialBoundedUInt32 \nRange.ExponentialBoundedUInt64 \nExponentialBoundedUInt64 \nRange.ExponentialByte \nExponentialByte \nRange.ExponentialDecimal \nExponentialDecimal \nRange.ExponentialDouble \nExponentialDouble \nRange.ExponentialFromByte \nExponentialFromByte \nRange.ExponentialFromDecimal \nExponentialFromDecimal \nRange.ExponentialFromDouble \nExponentialFromDouble \nRange.ExponentialFromInt16 \nExponentialFromInt16 \nRange.ExponentialFromInt32 \nExponentialFromInt32 \nRange.ExponentialFromInt64 \nExponentialFromInt64 \nRange.ExponentialFromSByte \nExponentialFromSByte \nRange.ExponentialFromSingle \nExponentialFromSingle \nRange.ExponentialFromUInt16 \nExponentialFromUInt16 \nRange.ExponentialFromUInt32 \nExponentialFromUInt32 \nRange.ExponentialFromUInt64 \nExponentialFromUInt64 \nRange.ExponentialInt16 \nExponentialInt16 \nRange.ExponentialInt32 \nExponentialInt32 \nRange.ExponentialInt64 \nExponentialInt64 \nRange.ExponentialSByte \nExponentialSByte \nRange.ExponentialSingle \nExponentialSingle \nRange.ExponentialUInt16 \nExponentialUInt16 \nRange.ExponentialUInt32 \nExponentialUInt32 \nRange.ExponentialUInt64 \nExponentialUInt64 \nRange.FromValue \nFromValue \nRange.LinearBoundedByte \nLinearBoundedByte \nRange.LinearBoundedDecimal \nLinearBoundedDecimal \nRange.LinearBoundedDouble \nLinearBoundedDouble \nRange.LinearBoundedInt16 \nLinearBoundedInt16 \nRange.LinearBoundedInt32 \nLinearBoundedInt32 \nRange.LinearBoundedInt64 \nLinearBoundedInt64 \nRange.LinearBoundedSByte \nLinearBoundedSByte \nRange.LinearBoundedSingle \nLinearBoundedSingle \nRange.LinearBoundedUInt16 \nLinearBoundedUInt16 \nRange.LinearBoundedUInt32 \nLinearBoundedUInt32 \nRange.LinearBoundedUInt64 \nLinearBoundedUInt64 \nRange.LinearByte \nLinearByte \nRange.LinearDecimal \nLinearDecimal \nRange.LinearDouble \nLinearDouble \nRange.LinearFromByte \nLinearFromByte \nRange.LinearFromDecimal \nLinearFromDecimal \nRange.LinearFromDouble \nLinearFromDouble \nRange.LinearFromInt16 \nLinearFromInt16 \nRange.LinearFromInt32 \nLinearFromInt32 \nRange.LinearFromInt64 \nLinearFromInt64 \nRange.LinearFromSByte \nLinearFromSByte \nRange.LinearFromSingle \nLinearFromSingle \nRange.LinearFromUInt16 \nLinearFromUInt16 \nRange.LinearFromUInt32 \nLinearFromUInt32 \nRange.LinearFromUInt64 \nLinearFromUInt64 \nRange.LinearInt16 \nLinearInt16 \nRange.LinearInt32 \nLinearInt32 \nRange.LinearInt64 \nLinearInt64 \nRange.LinearSByte \nLinearSByte \nRange.LinearSingle \nLinearSingle \nRange.LinearUInt16 \nLinearUInt16 \nRange.LinearUInt32 \nLinearUInt32 \nRange.LinearUInt64 \nLinearUInt64 \nRange.LowerBound \nLowerBound \nRange.Origin \nOrigin \nRange.Select \nSelect \nRange.UpperBound \nUpperBound"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#Bounds","title":"Range.Bounds","content":"Range.Bounds \nBounds \n\n Get the extents of a range, for a given size.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#Constant","title":"Range.Constant","content":"Range.Constant \nConstant \n\n Construct a range which is unaffected by the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#Constant","title":"Range.Constant","content":"Range.Constant \nConstant \n\n Construct a range which is unaffected by the size parameter with a\n origin point which may differ from the bounds.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedByte","title":"Range.ConstantBoundedByte","content":"Range.ConstantBoundedByte \nConstantBoundedByte \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedDecimal","title":"Range.ConstantBoundedDecimal","content":"Range.ConstantBoundedDecimal \nConstantBoundedDecimal \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedDouble","title":"Range.ConstantBoundedDouble","content":"Range.ConstantBoundedDouble \nConstantBoundedDouble \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedInt16","title":"Range.ConstantBoundedInt16","content":"Range.ConstantBoundedInt16 \nConstantBoundedInt16 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedInt32","title":"Range.ConstantBoundedInt32","content":"Range.ConstantBoundedInt32 \nConstantBoundedInt32 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedInt64","title":"Range.ConstantBoundedInt64","content":"Range.ConstantBoundedInt64 \nConstantBoundedInt64 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedSByte","title":"Range.ConstantBoundedSByte","content":"Range.ConstantBoundedSByte \nConstantBoundedSByte \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedSingle","title":"Range.ConstantBoundedSingle","content":"Range.ConstantBoundedSingle \nConstantBoundedSingle \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedUInt16","title":"Range.ConstantBoundedUInt16","content":"Range.ConstantBoundedUInt16 \nConstantBoundedUInt16 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedUInt32","title":"Range.ConstantBoundedUInt32","content":"Range.ConstantBoundedUInt32 \nConstantBoundedUInt32 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ConstantBoundedUInt64","title":"Range.ConstantBoundedUInt64","content":"Range.ConstantBoundedUInt64 \nConstantBoundedUInt64 \n\n Construct a range which is unaffected by the size parameter using the\n full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedByte","title":"Range.ExponentialBoundedByte","content":"Range.ExponentialBoundedByte \nExponentialBoundedByte \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedDecimal","title":"Range.ExponentialBoundedDecimal","content":"Range.ExponentialBoundedDecimal \nExponentialBoundedDecimal \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedDouble","title":"Range.ExponentialBoundedDouble","content":"Range.ExponentialBoundedDouble \nExponentialBoundedDouble \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedInt16","title":"Range.ExponentialBoundedInt16","content":"Range.ExponentialBoundedInt16 \nExponentialBoundedInt16 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedInt32","title":"Range.ExponentialBoundedInt32","content":"Range.ExponentialBoundedInt32 \nExponentialBoundedInt32 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedInt64","title":"Range.ExponentialBoundedInt64","content":"Range.ExponentialBoundedInt64 \nExponentialBoundedInt64 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedSByte","title":"Range.ExponentialBoundedSByte","content":"Range.ExponentialBoundedSByte \nExponentialBoundedSByte \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedSingle","title":"Range.ExponentialBoundedSingle","content":"Range.ExponentialBoundedSingle \nExponentialBoundedSingle \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedUInt16","title":"Range.ExponentialBoundedUInt16","content":"Range.ExponentialBoundedUInt16 \nExponentialBoundedUInt16 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedUInt32","title":"Range.ExponentialBoundedUInt32","content":"Range.ExponentialBoundedUInt32 \nExponentialBoundedUInt32 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialBoundedUInt64","title":"Range.ExponentialBoundedUInt64","content":"Range.ExponentialBoundedUInt64 \nExponentialBoundedUInt64 \n\n Construct a range which is scaled exponentially relative to the size\n parameter and uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialByte","title":"Range.ExponentialByte","content":"Range.ExponentialByte \nExponentialByte \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialDecimal","title":"Range.ExponentialDecimal","content":"Range.ExponentialDecimal \nExponentialDecimal \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialDouble","title":"Range.ExponentialDouble","content":"Range.ExponentialDouble \nExponentialDouble \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromByte","title":"Range.ExponentialFromByte","content":"Range.ExponentialFromByte \nExponentialFromByte \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromDecimal","title":"Range.ExponentialFromDecimal","content":"Range.ExponentialFromDecimal \nExponentialFromDecimal \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromDouble","title":"Range.ExponentialFromDouble","content":"Range.ExponentialFromDouble \nExponentialFromDouble \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromInt16","title":"Range.ExponentialFromInt16","content":"Range.ExponentialFromInt16 \nExponentialFromInt16 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromInt32","title":"Range.ExponentialFromInt32","content":"Range.ExponentialFromInt32 \nExponentialFromInt32 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromInt64","title":"Range.ExponentialFromInt64","content":"Range.ExponentialFromInt64 \nExponentialFromInt64 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromSByte","title":"Range.ExponentialFromSByte","content":"Range.ExponentialFromSByte \nExponentialFromSByte \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromSingle","title":"Range.ExponentialFromSingle","content":"Range.ExponentialFromSingle \nExponentialFromSingle \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromUInt16","title":"Range.ExponentialFromUInt16","content":"Range.ExponentialFromUInt16 \nExponentialFromUInt16 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromUInt32","title":"Range.ExponentialFromUInt32","content":"Range.ExponentialFromUInt32 \nExponentialFromUInt32 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialFromUInt64","title":"Range.ExponentialFromUInt64","content":"Range.ExponentialFromUInt64 \nExponentialFromUInt64 \n\n Construct a range which scales the bounds exponentially relative to the\n size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialInt16","title":"Range.ExponentialInt16","content":"Range.ExponentialInt16 \nExponentialInt16 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialInt32","title":"Range.ExponentialInt32","content":"Range.ExponentialInt32 \nExponentialInt32 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialInt64","title":"Range.ExponentialInt64","content":"Range.ExponentialInt64 \nExponentialInt64 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialSByte","title":"Range.ExponentialSByte","content":"Range.ExponentialSByte \nExponentialSByte \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialSingle","title":"Range.ExponentialSingle","content":"Range.ExponentialSingle \nExponentialSingle \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialUInt16","title":"Range.ExponentialUInt16","content":"Range.ExponentialUInt16 \nExponentialUInt16 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialUInt32","title":"Range.ExponentialUInt32","content":"Range.ExponentialUInt32 \nExponentialUInt32 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#ExponentialUInt64","title":"Range.ExponentialUInt64","content":"Range.ExponentialUInt64 \nExponentialUInt64 \n\n Construct a range which scales the second bound exponentially relative\n to the size parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#FromValue","title":"Range.FromValue","content":"Range.FromValue \nFromValue \n\n Construct a range which represents a constant single value.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedByte","title":"Range.LinearBoundedByte","content":"Range.LinearBoundedByte \nLinearBoundedByte \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedDecimal","title":"Range.LinearBoundedDecimal","content":"Range.LinearBoundedDecimal \nLinearBoundedDecimal \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedDouble","title":"Range.LinearBoundedDouble","content":"Range.LinearBoundedDouble \nLinearBoundedDouble \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedInt16","title":"Range.LinearBoundedInt16","content":"Range.LinearBoundedInt16 \nLinearBoundedInt16 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedInt32","title":"Range.LinearBoundedInt32","content":"Range.LinearBoundedInt32 \nLinearBoundedInt32 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedInt64","title":"Range.LinearBoundedInt64","content":"Range.LinearBoundedInt64 \nLinearBoundedInt64 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedSByte","title":"Range.LinearBoundedSByte","content":"Range.LinearBoundedSByte \nLinearBoundedSByte \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedSingle","title":"Range.LinearBoundedSingle","content":"Range.LinearBoundedSingle \nLinearBoundedSingle \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedUInt16","title":"Range.LinearBoundedUInt16","content":"Range.LinearBoundedUInt16 \nLinearBoundedUInt16 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedUInt32","title":"Range.LinearBoundedUInt32","content":"Range.LinearBoundedUInt32 \nLinearBoundedUInt32 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearBoundedUInt64","title":"Range.LinearBoundedUInt64","content":"Range.LinearBoundedUInt64 \nLinearBoundedUInt64 \n\n Construct a range which is scaled relative to the size parameter and\n uses the full range of a data type.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearByte","title":"Range.LinearByte","content":"Range.LinearByte \nLinearByte \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearDecimal","title":"Range.LinearDecimal","content":"Range.LinearDecimal \nLinearDecimal \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearDouble","title":"Range.LinearDouble","content":"Range.LinearDouble \nLinearDouble \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromByte","title":"Range.LinearFromByte","content":"Range.LinearFromByte \nLinearFromByte \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromDecimal","title":"Range.LinearFromDecimal","content":"Range.LinearFromDecimal \nLinearFromDecimal \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromDouble","title":"Range.LinearFromDouble","content":"Range.LinearFromDouble \nLinearFromDouble \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromInt16","title":"Range.LinearFromInt16","content":"Range.LinearFromInt16 \nLinearFromInt16 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromInt32","title":"Range.LinearFromInt32","content":"Range.LinearFromInt32 \nLinearFromInt32 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromInt64","title":"Range.LinearFromInt64","content":"Range.LinearFromInt64 \nLinearFromInt64 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromSByte","title":"Range.LinearFromSByte","content":"Range.LinearFromSByte \nLinearFromSByte \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromSingle","title":"Range.LinearFromSingle","content":"Range.LinearFromSingle \nLinearFromSingle \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromUInt16","title":"Range.LinearFromUInt16","content":"Range.LinearFromUInt16 \nLinearFromUInt16 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromUInt32","title":"Range.LinearFromUInt32","content":"Range.LinearFromUInt32 \nLinearFromUInt32 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearFromUInt64","title":"Range.LinearFromUInt64","content":"Range.LinearFromUInt64 \nLinearFromUInt64 \n\n Construct a range which scales the bounds relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearInt16","title":"Range.LinearInt16","content":"Range.LinearInt16 \nLinearInt16 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearInt32","title":"Range.LinearInt32","content":"Range.LinearInt32 \nLinearInt32 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearInt64","title":"Range.LinearInt64","content":"Range.LinearInt64 \nLinearInt64 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearSByte","title":"Range.LinearSByte","content":"Range.LinearSByte \nLinearSByte \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearSingle","title":"Range.LinearSingle","content":"Range.LinearSingle \nLinearSingle \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearUInt16","title":"Range.LinearUInt16","content":"Range.LinearUInt16 \nLinearUInt16 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearUInt32","title":"Range.LinearUInt32","content":"Range.LinearUInt32 \nLinearUInt32 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LinearUInt64","title":"Range.LinearUInt64","content":"Range.LinearUInt64 \nLinearUInt64 \n\n Construct a range which scales the second bound relative to the size\n parameter.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#LowerBound","title":"Range.LowerBound","content":"Range.LowerBound \nLowerBound \n\n Get the lower bound of a range for the given size.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#Origin","title":"Range.Origin","content":"Range.Origin \nOrigin \n\n Get the origin of a range. This might be the mid-point or the lower\n bound, depending on what the range represents.\n\n The \u0027bounds\u0027 of a range are scaled around this value when using the\n \u0027linear\u0027 family of combinators.\n\n When using a \u0027Range\u0027 to generate numbers, the shrinking function will\n shrink towards the origin.\n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#Select","title":"Range.Select","content":"Range.Select \nSelect \n"},{"uri":"https://github.com/hedgehogqa/fsharp-hedgehog/reference/hedgehog-linq-range.html#UpperBound","title":"Range.UpperBound","content":"Range.UpperBound \nUpperBound \n\n Get the upper bound of a range for the given size.\n"}]